# Basic Settings
set previewer ~/.config/lf/preview
set preview true
set hidden true
set drawbox true
set icons true
set ignorecase true
set info size:time

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) swallow  xdg-open "$f" ;;
    esac
}}

cmd mkdir %{{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile %{{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd chmod %{{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

# Trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f
map u

# File Openers
map ee $$EDITOR "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map md mkdir
map ch chmod
map br $vimv $fx
map r rename
map gg top
map G bottom
map R reload
map C clear
map U unselect

# Movement
map gh   cd ~/
map cfg  cd ~/.config
map ph   cd ~/Docs/Phone
map gsrp cd ~/Docs/Scripts
map git  cd ~/Docs/Github
map gsrv cd ~/Docs/Server
map bak  cd ~/Docs/Server/Backups
map gfl  cd ~/Docs/Faculdade/Licenciatura/1_ano
map gp   cd ~/Pictures
map gm   cd ~/Music
map gdw  cd ~/Downloads
map grm  cd /media
